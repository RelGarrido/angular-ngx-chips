{"version":3,"file":"ngx-chips.mjs","sources":["../../modules/core/pipes/highlight.pipe.ts","../../modules/core/constants/index.ts","../../modules/core/providers/drag-provider.ts","../../modules/defaults.ts","../../modules/core/providers/options-provider.ts","../../modules/core/accessor.ts","../../modules/core/helpers/listen.ts","../../modules/components/tag-input-form/tag-input-form.component.ts","../../modules/components/tag-input-form/tag-input-form.template.html","../../modules/components/tag/tag-ripple.component.ts","../../modules/components/icon/icon.ts","../../modules/components/icon/icon.html","../../modules/components/tag/tag.component.ts","../../modules/components/tag/tag.template.html","../../modules/components/tag-input/animations.ts","../../modules/components/dropdown/tag-input-dropdown.component.ts","../../modules/components/dropdown/tag-input-dropdown.template.html","../../modules/components/tag-input/tag-input.ts","../../modules/components/tag-input/tag-input.template.html","../../modules/tag-input.module.ts","../../modules/ngx-chips.ts"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\r\n\r\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\r\n@Pipe({\r\n    name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n    /**\r\n     * @name transform\r\n     * @param value {string}\r\n     * @param arg {string}\r\n     */\r\n    public transform(value: string, arg: string): string {\r\n        if (!arg.trim()) {\r\n            return value;\r\n        }\r\n\r\n        try {\r\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\r\n            return value.replace(regex, '<b>$1</b>');\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","/*\r\n** constants and default values for <tag-input>\r\n */\r\n\r\nexport const PLACEHOLDER = '+ Tag';\r\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\r\nexport const KEYDOWN = 'keydown';\r\nexport const KEYUP = 'keyup';\r\nexport const FOCUS = 'focus';\r\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\r\n\r\nexport const ACTIONS_KEYS = {\r\n    DELETE: 'DELETE',\r\n    SWITCH_PREV: 'SWITCH_PREV',\r\n    SWITCH_NEXT: 'SWITCH_NEXT',\r\n    TAB: 'TAB'\r\n};\r\n\r\nexport const KEY_PRESS_ACTIONS = {\r\n    8: ACTIONS_KEYS.DELETE,\r\n    46: ACTIONS_KEYS.DELETE,\r\n    37: ACTIONS_KEYS.SWITCH_PREV,\r\n    39: ACTIONS_KEYS.SWITCH_NEXT,\r\n    9: ACTIONS_KEYS.TAB\r\n};\r\n\r\nexport const DRAG_AND_DROP_KEY = 'Text';\r\nexport const NEXT = 'NEXT';\r\nexport const PREV = 'PREV';\r\n\r\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\r\nimport { TagModel } from '../tag-model';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport declare interface DraggedTag {\r\n    index: number;\r\n    tag: TagModel;\r\n    zone: string;\r\n}\r\n\r\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\r\n\r\nexport declare interface State {\r\n    dragging: boolean;\r\n    dropping: boolean;\r\n    index: number | undefined;\r\n}\r\n\r\nexport declare type StateProperty = keyof State;\r\n\r\n@Injectable()\r\nexport class DragProvider {\r\n    public sender: TagInputComponent;\r\n    public receiver: TagInputComponent;\r\n\r\n    public state: State = {\r\n        dragging: false,\r\n        dropping: false,\r\n        index: undefined\r\n    };\r\n\r\n    /**\r\n     * @name setDraggedItem\r\n     * @param event\r\n     * @param tag\r\n     */\r\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\r\n        if (event && event.dataTransfer) {\r\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getDraggedItem\r\n     * @param event\r\n     */\r\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\r\n        if (event && event.dataTransfer) {\r\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\r\n            try {\r\n                return JSON.parse(data) as DraggedTag;\r\n            } catch {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name setSender\r\n     * @param sender\r\n     */\r\n    public setSender(sender: TagInputComponent): void {\r\n        this.sender = sender;\r\n    }\r\n\r\n    /**\r\n     * @name setReceiver\r\n     * @param receiver\r\n     */\r\n    public setReceiver(receiver: TagInputComponent): void {\r\n        this.receiver = receiver;\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param tag\r\n     * @param indexDragged\r\n     * @param indexDropped\r\n     */\r\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\r\n        this.onDragEnd();\r\n\r\n        this.sender.onRemoveRequested(tag, indexDragged);\r\n        this.receiver.onAddingRequested(false, tag, indexDropped);\r\n    }\r\n\r\n    /**\r\n     * @name setState\r\n     * @param state\r\n     */\r\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\r\n        this.state = { ...this.state, ...state };\r\n    }\r\n\r\n    /**\r\n     * @name getState\r\n     * @param key\r\n     */\r\n    public getState(key?: StateProperty): State | State[StateProperty] {\r\n        return key ? this.state[key] : this.state;\r\n    }\r\n\r\n    /**\r\n     * @name onDragEnd\r\n     */\r\n    public onDragEnd(): void {\r\n        this.setState({\r\n            dragging: false,\r\n            dropping: false,\r\n            index: undefined\r\n        });\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\r\n\r\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagModel } from './core/tag-model';\r\n\r\nexport interface TagInputOptions {\r\n    separatorKeys: string[];\r\n    separatorKeyCodes: number[];\r\n    maxItems: number;\r\n    placeholder: string;\r\n    secondaryPlaceholder: string;\r\n    validators: ValidatorFn[];\r\n    asyncValidators: AsyncValidatorFn[];\r\n    onlyFromAutocomplete: boolean;\r\n    errorMessages: { [key: string]: string; };\r\n    theme: '';\r\n    onTextChangeDebounce: number;\r\n    inputId: string | null;\r\n    inputClass: string;\r\n    clearOnBlur: boolean;\r\n    hideForm: boolean;\r\n    addOnBlur: boolean;\r\n    addOnPaste: boolean;\r\n    pasteSplitPattern: string | RegExp;\r\n    blinkIfDupe: boolean;\r\n    removable: boolean;\r\n    editable: boolean;\r\n    allowDupes: boolean;\r\n    modelAsStrings: boolean;\r\n    trimTags: boolean;\r\n    ripple: boolean;\r\n    tabIndex: string;\r\n    disable: boolean;\r\n    dragZone: string;\r\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\r\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    animationDuration: {\r\n        enter: string,\r\n        leave: string\r\n    };\r\n}\r\n\r\nexport interface TagInputDropdownOptions {\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    appendToBody: boolean;\r\n    offset: string;\r\n    focusFirstElement: boolean;\r\n    showDropdownIfEmpty: boolean;\r\n    minimumTextLength: number;\r\n    limitItemsTo: number;\r\n    keepOpen: boolean;\r\n    zIndex: number;\r\n    dynamicUpdate: boolean;\r\n    matchingFn: (value: string, target: TagModel) => boolean;\r\n}\r\n\r\nexport const defaults = {\r\n    tagInput: <TagInputOptions>{\r\n        separatorKeys: [],\r\n        separatorKeyCodes: [],\r\n        maxItems: Infinity,\r\n        placeholder: PLACEHOLDER,\r\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\r\n        validators: [],\r\n        asyncValidators: [],\r\n        onlyFromAutocomplete: false,\r\n        errorMessages: {},\r\n        theme: '',\r\n        onTextChangeDebounce: 250,\r\n        inputId: null,\r\n        inputClass: '',\r\n        clearOnBlur: false,\r\n        hideForm: false,\r\n        addOnBlur: false,\r\n        addOnPaste: false,\r\n        pasteSplitPattern: ',',\r\n        blinkIfDupe: true,\r\n        removable: true,\r\n        editable: false,\r\n        allowDupes: false,\r\n        modelAsStrings: false,\r\n        trimTags: true,\r\n        ripple: true,\r\n        tabIndex: '',\r\n        disable: false,\r\n        dragZone: '',\r\n        onRemoving: undefined,\r\n        onAdding: undefined,\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        animationDuration: {\r\n            enter: '250ms',\r\n            leave: '150ms'\r\n        }\r\n    },\r\n    dropdown: <TagInputDropdownOptions>{\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        appendToBody: true,\r\n        offset: '50 0',\r\n        focusFirstElement: false,\r\n        showDropdownIfEmpty: false,\r\n        minimumTextLength: 1,\r\n        limitItemsTo: Infinity,\r\n        keepOpen: true,\r\n        dynamicUpdate: true,\r\n        zIndex: 1000,\r\n        matchingFn\r\n    }\r\n};\r\n\r\n/**\r\n * @name matchingFn\r\n * @param this\r\n * @param value\r\n * @param target\r\n */\r\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\r\n    const targetValue = target[this.displayBy].toString();\r\n\r\n    return targetValue && targetValue\r\n        .toLowerCase()\r\n        .indexOf(value.toLowerCase()) >= 0;\r\n}\r\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\r\n\r\nexport type Options = {\r\n    tagInput?: {\r\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\r\n    };\r\n    dropdown?: {\r\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\r\n    }\r\n};\r\n\r\nexport class OptionsProvider {\r\n    public static defaults = defaults;\r\n\r\n    public setOptions(options: Options): void {\r\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\r\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\r\n    }\r\n}\r\n\r\nexport { TagInputDropdownOptions, TagInputOptions };\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { Input, Directive } from '@angular/core';\r\nimport { OptionsProvider } from './providers/options-provider';\r\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\r\nimport { TagModel } from './tag-model';\r\n\r\nexport function isObject(obj: any): boolean {\r\n    return obj === Object(obj);\r\n}\r\n\r\n@Directive()\r\nexport class TagInputAccessor implements ControlValueAccessor {\r\n    private _items: TagModel[] = [];\r\n    private _onTouchedCallback: () => void;\r\n    private _onChangeCallback: (items: TagModel[]) => void;\r\n\r\n    public dropdown: TagInputDropdown;\r\n\r\n    /**\r\n     * @name displayBy\r\n     */\r\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\r\n\r\n    /**\r\n     * @name identifyBy\r\n     */\r\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\r\n\r\n    public get items(): TagModel[] {\r\n        return this._items;\r\n    }\r\n\r\n    public set items(items: TagModel[]) {\r\n        this._items = items;\r\n        this._onChangeCallback(this._items);\r\n    }\r\n\r\n    public onTouched() {\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(items: any[]) {\r\n        this._items = items || [];\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    /**\r\n     * @name getItemValue\r\n     * @param item\r\n     * @param fromDropdown\r\n     */\r\n    public getItemValue(item: TagModel, fromDropdown = false): string {\r\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\r\n        return isObject(item) ? item[property] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemDisplay\r\n     * @param item\r\n     * @param fromDropdown\r\n     */\r\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\r\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\r\n        return isObject(item) ? item[property] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemsWithout\r\n     * @param index\r\n     */\r\n    protected getItemsWithout(index: number): TagModel[] {\r\n        return this.items.filter((item, position) => position !== index);\r\n    }\r\n}\r\n","\r\n/**\r\n * @name listen\r\n * @param listenerType\r\n * @param action\r\n * @param condition\r\n */\r\nexport function listen(listenerType: string, action: () => any, condition = true): void {\r\n    // if the event provided does not exist, throw an error\r\n    if (!this.listeners.hasOwnProperty(listenerType)) {\r\n        throw new Error('The event entered may be wrong');\r\n    }\r\n\r\n    // if a condition is present and is false, exit early\r\n    if (!condition) {\r\n        return;\r\n    }\r\n\r\n    // fire listener\r\n    this.listeners[listenerType].push(action);\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AsyncValidatorFn, UntypedFormControl, UntypedFormGroup, ValidatorFn } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'tag-input-form',\r\n    styleUrls: ['./tag-input-form.style.scss'],\r\n    templateUrl: './tag-input-form.template.html'\r\n})\r\nexport class TagInputForm implements OnInit, OnChanges {\r\n    /**\r\n     * @name onSubmit\r\n     */\r\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onBlur\r\n     */\r\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onFocus\r\n     */\r\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeyup\r\n     */\r\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeydown\r\n     */\r\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name inputTextChange\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    // inputs\r\n\r\n    /**\r\n     * @name placeholder\r\n     */\r\n    @Input() public placeholder: string;\r\n\r\n    /**\r\n     * @name validators\r\n     */\r\n    @Input() public validators: ValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name inputId\r\n     */\r\n    @Input() public inputId: string;\r\n\r\n    /**\r\n     * @name inputClass\r\n     */\r\n    @Input() public inputClass: string;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     */\r\n    @Input() public tabindex = '';\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input() public disabled = false;\r\n\r\n    /**\r\n     * @name input\r\n     */\r\n    @ViewChild('input') public input;\r\n\r\n    /**\r\n     * @name form\r\n     */\r\n    public form: UntypedFormGroup;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input()\r\n    public get inputText(): string {\r\n        return this.item.value;\r\n    }\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text {string}\r\n     */\r\n    public set inputText(text: string) {\r\n        this.item.setValue(text);\r\n\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    private readonly item: UntypedFormControl = new UntypedFormControl({ value: '', disabled: this.disabled });\r\n\r\n    ngOnInit() {\r\n        this.item.setValidators(this.validators);\r\n        this.item.setAsyncValidators(this.asyncValidators);\r\n\r\n        // creating form\r\n        this.form = new UntypedFormGroup({\r\n            item: this.item\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.disabled && !changes.disabled.firstChange) {\r\n            if (changes.disabled.currentValue) {\r\n                this.form.controls['item'].disable();\r\n            } else {\r\n                this.form.controls['item'].enable();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name value\r\n     */\r\n    public get value(): UntypedFormControl {\r\n        return this.form.get('item') as UntypedFormControl;\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     */\r\n    public isInputFocused(): boolean {\r\n        const doc = typeof document !== 'undefined' ? document : undefined;\r\n        return doc ? doc.activeElement === this.input.nativeElement : false;\r\n    }\r\n\r\n    /**\r\n     * @name getErrorMessages\r\n     * @param messages\r\n     */\r\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\r\n        return Object.keys(messages)\r\n            .filter(err => this.value.hasError(err))\r\n            .map(err => messages[err]);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     */\r\n    public hasErrors(): boolean {\r\n        const { dirty, value, valid } = this.form;\r\n        return dirty && value.item && !valid;\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.input.nativeElement.focus();\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.input.nativeElement.blur();\r\n    }\r\n\r\n    /**\r\n     * @name getElementPosition\r\n     */\r\n    public getElementPosition(): ClientRect {\r\n        return this.input.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    /**\r\n     * - removes input from the component\r\n     * @name destroy\r\n     */\r\n    public destroy(): void {\r\n        const input = this.input.nativeElement;\r\n        input.parentElement.removeChild(input);\r\n    }\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     * @param $event\r\n     */\r\n    public onKeyDown($event) {\r\n        this.inputText = this.value.value;\r\n        if ($event.key === 'Enter') {\r\n            this.submit($event);\r\n        } else {\r\n          return this.onKeydown.emit($event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onKeyUp\r\n     * @param $event\r\n     */\r\n    public onKeyUp($event) {\r\n        this.inputText = this.value.value;\r\n        return this.onKeyup.emit($event);\r\n    }\r\n\r\n    /**\r\n     * @name submit\r\n     */\r\n    public submit($event: any): void {\r\n        $event.preventDefault();\r\n        this.onSubmit.emit($event);\r\n    }\r\n}\r\n","<!-- form -->\r\n<form (ngSubmit)=\"submit($event)\" [formGroup]=\"form\">\r\n    <input #input\r\n\r\n           type=\"text\"\r\n           class=\"ng2-tag-input__text-input\"\r\n           autocomplete=\"off\"\r\n           tabindex=\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\"\r\n           minlength=\"1\"\r\n           formControlName=\"item\"\r\n\r\n           [ngClass]=\"inputClass\"\r\n           [attr.id]=\"inputId\"\r\n           [attr.placeholder]=\"placeholder\"\r\n           [attr.aria-label]=\"placeholder\"\r\n           [attr.tabindex]=\"tabindex\"\r\n           [attr.disabled]=\"disabled ? disabled : null\"\r\n\r\n           (focus)=\"onFocus.emit($event)\"\r\n           (blur)=\"onBlur.emit($event)\"\r\n           (keydown)=\"onKeyDown($event)\"\r\n           (keyup)=\"onKeyUp($event)\"\r\n    />\r\n</form>\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n\r\nimport {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'tag-ripple',\r\n    styles: [`\r\n        :host {\r\n            width: 100%;\r\n            height: 100%;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n        }\r\n\r\n        .tag-ripple {\r\n            background: rgba(0, 0, 0, 0.1);\r\n            top: 50%;\r\n            left: 50%;\r\n            height: 100%;\r\n            transform: translate(-50%, -50%);\r\n            position: absolute;\r\n        }\r\n    `],\r\n    template: `\r\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\r\n    `,\r\n    animations: [\r\n        trigger('ink', [\r\n            state('none', style({width: 0, opacity: 0})),\r\n            transition('none => clicked', [\r\n                animate(300, keyframes([\r\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\r\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\r\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\r\n                ]))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class TagRipple {\r\n    @Input() public state = 'none';\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'delete-icon',\r\n    templateUrl: './icon.html',\r\n    styleUrls: ['./icon.scss']\r\n})\r\nexport class DeleteIconComponent {}\r\n","<span>\r\n    <svg\r\n        height=\"16px\"\r\n        viewBox=\"0 0 32 32\"\r\n        width=\"16px\"\r\n    >\r\n        <path\r\n            d=\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\"\r\n            fill=\"#121313\"\r\n        />\r\n    </svg>\r\n</span>","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    TemplateRef,\r\n    ElementRef,\r\n    HostListener,\r\n    HostBinding,\r\n    ViewChild,\r\n    ChangeDetectorRef,\r\n    Renderer2\r\n} from '@angular/core';\r\n\r\nimport { TagModel } from '../../core/tag-model';\r\nimport { TagRipple } from '../tag/tag-ripple.component';\r\n\r\n// mocking navigator\r\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\r\n    userAgent: 'Chrome',\r\n    vendor: 'Google Inc'\r\n};\r\n\r\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n@Component({\r\n    selector: 'tag',\r\n    templateUrl: './tag.template.html',\r\n    styleUrls: ['./tag-component.style.scss']\r\n})\r\nexport class TagComponent {\r\n    /**\r\n     * @name model {TagModel}\r\n     */\r\n    @Input()\r\n    public model: TagModel;\r\n\r\n    /**\r\n     * @name removable {boolean}\r\n     */\r\n    @Input()\r\n    public removable: boolean;\r\n\r\n    /**\r\n     * @name editable {boolean}\r\n     */\r\n    @Input()\r\n    public editable: boolean;\r\n\r\n    /**\r\n     * @name template {TemplateRef<any>}\r\n     */\r\n    @Input()\r\n    public template: TemplateRef<any>;\r\n\r\n    /**\r\n     * @name displayBy {string}\r\n     */\r\n    @Input()\r\n    public displayBy: string;\r\n\r\n    /**\r\n     * @name identifyBy {string}\r\n     */\r\n    @Input()\r\n    public identifyBy: string;\r\n\r\n    /**\r\n     * @name index {number}\r\n     */\r\n    @Input()\r\n    public index: number;\r\n\r\n    /**\r\n     * @name hasRipple\r\n     */\r\n    @Input()\r\n    public hasRipple: boolean;\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input()\r\n    public disabled = false;\r\n\r\n    /**\r\n     * @name canAddTag\r\n     */\r\n    @Input()\r\n    public canAddTag: (tag: TagModel) => boolean;\r\n\r\n    /**\r\n     * @name onSelect\r\n     */\r\n    @Output()\r\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     */\r\n    @Output()\r\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onBlur\r\n     */\r\n    @Output()\r\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     */\r\n    @Output()\r\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * @name onTagEdited\r\n     */\r\n    @Output()\r\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name readonly {boolean}\r\n     */\r\n    public get readonly(): boolean {\r\n        return typeof this.model !== 'string' && this.model.readonly === true;\r\n    }\r\n\r\n    /**\r\n     * @name editing\r\n     */\r\n    public editing = false;\r\n\r\n    /**\r\n     * @name moving\r\n     */\r\n    @HostBinding('class.moving')\r\n    public moving: boolean;\r\n\r\n    /**\r\n     * @name rippleState\r\n     */\r\n    public rippleState = 'none';\r\n\r\n    /**\r\n     * @name ripple {TagRipple}\r\n     */\r\n    @ViewChild(TagRipple)\r\n    public ripple: TagRipple;\r\n\r\n    constructor(\r\n        public element: ElementRef,\r\n        public renderer: Renderer2,\r\n        private cdRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    /**\r\n     * @name select\r\n     */\r\n    public select($event?: MouseEvent): void {\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.focus();\r\n\r\n        this.onSelect.emit(this.model);\r\n    }\r\n\r\n    /**\r\n     * @name remove\r\n     */\r\n    public remove($event: MouseEvent): void {\r\n        $event.stopPropagation();\r\n        this.onRemove.emit(this);\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.element.nativeElement.focus();\r\n    }\r\n\r\n    public move(): void {\r\n        this.moving = true;\r\n    }\r\n\r\n    /**\r\n     * @name keydown\r\n     * @param event\r\n     */\r\n    @HostListener('keydown', ['$event'])\r\n    public keydown(event: KeyboardEvent): void {\r\n        if (this.editing) {\r\n            if (event.keyCode === 13) {\r\n                return this.disableEditMode(event);\r\n            }\r\n        } else {\r\n            this.onKeyDown.emit({ event, model: this.model });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name blink\r\n     */\r\n    public blink(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('blink');\r\n\r\n        setTimeout(() => classList.remove('blink'), 50);\r\n    }\r\n\r\n    /**\r\n     * @name toggleEditMode\r\n     */\r\n    public toggleEditMode(): void {\r\n        if (this.editable) {\r\n            return this.editing ? undefined : this.activateEditMode();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onBlurred\r\n     * @param event\r\n     */\r\n    public onBlurred(event: any): void {\r\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\r\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\r\n        if (!this.editable) {\r\n            return;\r\n        }\r\n\r\n        this.disableEditMode();\r\n\r\n        const value: string = event.target.innerText;\r\n        const result =\r\n            typeof this.model === 'string'\r\n                ? value\r\n                : { ...this.model, [this.displayBy]: value };\r\n\r\n        this.onBlur.emit(result);\r\n    }\r\n\r\n    /**\r\n     * @name getDisplayValue\r\n     * @param item\r\n     */\r\n    public getDisplayValue(item: TagModel): string {\r\n        return typeof item === 'string' ? item : item[this.displayBy];\r\n    }\r\n\r\n    /**\r\n     * @desc returns whether the ripple is visible or not\r\n     * only works in Chrome\r\n     * @name isRippleVisible\r\n     */\r\n    public get isRippleVisible(): boolean {\r\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\r\n    }\r\n\r\n    /**\r\n     * @name disableEditMode\r\n     * @param $event\r\n     */\r\n    public disableEditMode($event?: Event): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        const input = this.getContentEditableText();\r\n\r\n        this.editing = false;\r\n        classList.remove('tag--editing');\r\n\r\n        if (!input) {\r\n            this.setContentEditableText(this.model);\r\n            return;\r\n        }\r\n\r\n        this.storeNewValue(input);\r\n        this.cdRef.detectChanges();\r\n\r\n        if ($event) {\r\n            $event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name isDeleteIconVisible\r\n     */\r\n    public isDeleteIconVisible(): boolean {\r\n        return (\r\n            !this.readonly && !this.disabled && this.removable && !this.editing\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditableText\r\n     */\r\n    private getContentEditableText(): string {\r\n        const input = this.getContentEditable();\r\n\r\n        return input ? input.innerText.trim() : '';\r\n    }\r\n\r\n    /**\r\n     * @name setContentEditableText\r\n     * @param model\r\n     */\r\n    private setContentEditableText(model: TagModel) {\r\n        const input = this.getContentEditable();\r\n        const value = this.getDisplayValue(model);\r\n\r\n        input.innerText = value;\r\n    }\r\n\r\n    /**\r\n     * @name\r\n     */\r\n    private activateEditMode(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('tag--editing');\r\n\r\n        this.editing = true;\r\n    }\r\n\r\n    /**\r\n     * @name storeNewValue\r\n     * @param input\r\n     */\r\n    private storeNewValue(input: string): void {\r\n        const exists = (tag: TagModel) => {\r\n            return typeof tag === 'string'\r\n                ? tag === input\r\n                : tag[this.displayBy] === input;\r\n        };\r\n\r\n        const hasId = () => {\r\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\r\n        };\r\n\r\n        // if the value changed, replace the value in the model\r\n        if (exists(this.model)) {\r\n            return;\r\n        }\r\n\r\n        const model =\r\n            typeof this.model === 'string'\r\n                ? input\r\n                : {\r\n                      index: this.index,\r\n                      [this.identifyBy]: hasId()\r\n                          ? this.model[this.identifyBy]\r\n                          : input,\r\n                      [this.displayBy]: input\r\n                  };\r\n\r\n        if (this.canAddTag(model)) {\r\n            this.onTagEdited.emit({ tag: model, index: this.index });\r\n        } else {\r\n            this.setContentEditableText(this.model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditable\r\n     */\r\n    private getContentEditable(): HTMLInputElement {\r\n        return this.element.nativeElement.querySelector('[contenteditable]');\r\n    }\r\n}\r\n","<div (click)=\"select($event)\"\r\n     (dblclick)=\"toggleEditMode()\"\r\n     (mousedown)=\"rippleState='clicked'\"\r\n     (mouseup)=\"rippleState='none'\"\r\n     [ngSwitch]=\"!!template\"\r\n     [class.disabled]=\"disabled\"\r\n     [attr.tabindex]=\"-1\"\r\n     [attr.aria-label]=\"getDisplayValue(model)\">\r\n\r\n    <div *ngSwitchCase=\"true\" [attr.contenteditable]=\"editing\">\r\n        <!-- CUSTOM TEMPLATE -->\r\n        <ng-template\r\n            [ngTemplateOutletContext]=\"{ item: model, index: index }\"\r\n            [ngTemplateOutlet]=\"template\">\r\n        </ng-template>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"false\" class=\"tag-wrapper\">\r\n        <!-- TAG NAME -->\r\n        <div [attr.contenteditable]=\"editing\"\r\n             [attr.title]=\"getDisplayValue(model)\"\r\n             class=\"tag__text inline\"\r\n             spellcheck=\"false\"\r\n             (keydown.enter)=\"disableEditMode($event)\"\r\n             (keydown.escape)=\"disableEditMode($event)\"\r\n             (click)=\"editing ? $event.stopPropagation() : undefined\"\r\n             (blur)=\"onBlurred($event)\">\r\n            {{ getDisplayValue(model) }}\r\n        </div>\r\n\r\n        <!-- 'X' BUTTON -->\r\n        <delete-icon\r\n            aria-label=\"Remove tag\"\r\n            role=\"button\"\r\n            (click)=\"remove($event)\"\r\n            *ngIf=\"isDeleteIconVisible()\">\r\n        </delete-icon>\r\n    </div>\r\n</div>\r\n\r\n<tag-ripple [state]=\"rippleState\"\r\n            [attr.tabindex]=\"-1\"\r\n            *ngIf=\"isRippleVisible\">\r\n</tag-ripple>\r\n","import {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state,\r\n    AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\n/**\r\n * @name animations\r\n */\r\nexport const animations = [\r\n    trigger('animation', [\r\n        state('in', style({\r\n            opacity: 1\r\n        })),\r\n        state('out', style({\r\n            opacity: 0\r\n        })),\r\n        transition(':enter', [\r\n            animate('{{ enter }}', keyframes([\r\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\r\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\r\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\r\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\r\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\r\n            ]))\r\n        ]),\r\n        transition(':leave', [\r\n            animate('{{ leave }}', keyframes([\r\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\r\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\r\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\r\n            ]))\r\n        ])\r\n    ])\r\n];\r\n","import {\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  HostListener,\r\n  Injector,\r\n  Input,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  AfterViewInit\r\n} from '@angular/core';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\r\nimport { defaults } from '../../defaults';\r\nimport { TagInputComponent } from '../tag-input/tag-input';\r\nimport {TagModel} from '../../core/tag-model';\r\n\r\n@Component({\r\n  selector: 'tag-input-dropdown',\r\n  templateUrl: './tag-input-dropdown.template.html'\r\n})\r\nexport class TagInputDropdown implements AfterViewInit {\r\n  /**\r\n   * @name dropdown\r\n   */\r\n  @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\r\n\r\n  /**\r\n   * @name menuTemplate\r\n   * @desc reference to the template if provided by the user\r\n   */\r\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\r\n\r\n  /**\r\n   * @name offset\r\n   */\r\n  @Input() public offset: string = defaults.dropdown.offset;\r\n\r\n  /**\r\n   * @name focusFirstElement\r\n   */\r\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\r\n\r\n  /**\r\n   * - show autocomplete dropdown if the value of input is empty\r\n   * @name showDropdownIfEmpty\r\n   */\r\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\r\n\r\n  /**\r\n   * @description observable passed as input which populates the autocomplete items\r\n   * @name autocompleteObservable\r\n   */\r\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\r\n\r\n  /**\r\n   * - desc minimum text length in order to display the autocomplete dropdown\r\n   * @name minimumTextLength\r\n   */\r\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\r\n\r\n  /**\r\n   * - number of items to display in the autocomplete dropdown\r\n   * @name limitItemsTo\r\n   */\r\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\r\n\r\n  /**\r\n   * @name displayBy\r\n   */\r\n  @Input() public displayBy = defaults.dropdown.displayBy;\r\n\r\n  /**\r\n   * @name identifyBy\r\n   */\r\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\r\n\r\n  /**\r\n   * @description a function a developer can use to implement custom matching for the autocomplete\r\n   * @name matchingFn\r\n   */\r\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\r\n    defaults.dropdown.matchingFn;\r\n\r\n  /**\r\n   * @name appendToBody\r\n   */\r\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\r\n\r\n  /**\r\n   * @name keepOpen\r\n   * @description option to leave dropdown open when adding a new item\r\n   */\r\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\r\n\r\n  /**\r\n   * @name dynamicUpdate\r\n   */\r\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\r\n\r\n  /**\r\n   * @name zIndex\r\n   */\r\n  @Input() public zIndex = defaults.dropdown.zIndex;\r\n\r\n  /**\r\n   * list of items that match the current value of the input (for autocomplete)\r\n   * @name items\r\n   */\r\n  public items: TagModel[] = [];\r\n\r\n  /**\r\n   * @name tagInput\r\n   */\r\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\r\n\r\n  /**\r\n   * @name _autocompleteItems\r\n   */\r\n  private _autocompleteItems: TagModel[] = [];\r\n\r\n  /**\r\n   * @name autocompleteItems\r\n   * @param items\r\n   */\r\n  public set autocompleteItems(items: TagModel[]) {\r\n    this._autocompleteItems = items;\r\n  }\r\n\r\n  /**\r\n   * @name autocompleteItems\r\n   * @desc array of items that will populate the autocomplete\r\n   */\r\n  @Input() public get autocompleteItems(): TagModel[] {\r\n    const items = this._autocompleteItems;\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n\r\n    return items.map((item: TagModel) => {\r\n      return typeof item === 'string'\r\n        ? {\r\n            [this.displayBy]: item,\r\n            [this.identifyBy]: item\r\n          }\r\n        : item;\r\n    });\r\n  }\r\n\r\n  constructor(private readonly injector: Injector) {}\r\n\r\n  /**\r\n   * @name ngAfterviewInit\r\n   */\r\n  ngAfterViewInit(): void {\r\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\r\n      this.requestAdding(item);\r\n    });\r\n\r\n    // reset itemsMatching array when the dropdown is hidden\r\n    this.onHide().subscribe(this.resetItems);\r\n\r\n    const DEBOUNCE_TIME = 200;\r\n    const KEEP_OPEN = this.keepOpen;\r\n\r\n    this.tagInput.onTextChange\r\n      .asObservable()\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(DEBOUNCE_TIME),\r\n        filter((value: string) => {\r\n          if (KEEP_OPEN === false) {\r\n            return value.length > 0;\r\n          }\r\n\r\n          return true;\r\n        })\r\n      )\r\n      .subscribe(this.show);\r\n  }\r\n\r\n  /**\r\n   * @name updatePosition\r\n   */\r\n  public updatePosition(): void {\r\n    const position = this.tagInput.inputForm.getElementPosition();\r\n\r\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\r\n  }\r\n\r\n  /**\r\n   * @name isVisible\r\n   */\r\n  public get isVisible(): boolean {\r\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\r\n  }\r\n\r\n  /**\r\n   * @name onHide\r\n   */\r\n  public onHide(): EventEmitter<Ng2Dropdown> {\r\n    return this.dropdown.onHide;\r\n  }\r\n\r\n  /**\r\n   * @name onItemClicked\r\n   */\r\n  public onItemClicked() {\r\n    return this.dropdown.onItemClicked;\r\n  }\r\n\r\n  /**\r\n   * @name selectedItem\r\n   */\r\n  public get selectedItem(): Ng2MenuItem {\r\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\r\n  }\r\n\r\n  /**\r\n   * @name state\r\n   */\r\n  public get state(): any {\r\n    return this.dropdown.menu.dropdownState;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @name show\r\n   */\r\n  public show = (): void => {\r\n    const maxItemsReached =\r\n      this.tagInput.items.length === this.tagInput.maxItems;\r\n    const value = this.getFormValue();\r\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\r\n    const position = this.calculatePosition();\r\n    const items = this.getMatchingItems(value);\r\n    const hasItems = items.length > 0;\r\n    const isHidden = this.isVisible === false;\r\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\r\n    const isDisabled = this.tagInput.disable;\r\n\r\n    const shouldShow =\r\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\r\n    const shouldHide = this.isVisible && !hasItems;\r\n\r\n    if (this.autocompleteObservable && hasMinimumText) {\r\n      return this.getItemsFromObservable(value);\r\n    }\r\n\r\n    if (\r\n      (!this.showDropdownIfEmpty && !value) ||\r\n      maxItemsReached ||\r\n      isDisabled\r\n    ) {\r\n      return this.dropdown.hide();\r\n    }\r\n\r\n    this.setItems(items);\r\n\r\n    if (shouldShow) {\r\n      this.dropdown.show(position);\r\n    } else if (shouldHide) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @name hide\r\n   */\r\n  public hide(): void {\r\n    this.resetItems();\r\n    this.dropdown.hide();\r\n  }\r\n\r\n  /**\r\n   * @name scrollListener\r\n   */\r\n  @HostListener('window:scroll')\r\n  public scrollListener(): void {\r\n    if (!this.isVisible || !this.dynamicUpdate) {\r\n      return;\r\n    }\r\n\r\n    this.updatePosition();\r\n  }\r\n\r\n  /**\r\n   * @name onWindowBlur\r\n   */\r\n  @HostListener('window:blur')\r\n  public onWindowBlur(): void {\r\n    this.dropdown.hide();\r\n  }\r\n\r\n  /**\r\n   * @name getFormValue\r\n   */\r\n  private getFormValue(): string {\r\n    const formValue = this.tagInput.formValue;\r\n    return formValue ? formValue.toString().trim() : '';\r\n  }\r\n\r\n  /**\r\n   * @name calculatePosition\r\n   */\r\n  private calculatePosition(): ClientRect {\r\n    return this.tagInput.inputForm.getElementPosition();\r\n  }\r\n\r\n  /**\r\n   * @name requestAdding\r\n   * @param item {Ng2MenuItem}\r\n   */\r\n  private requestAdding = async (item: Ng2MenuItem) => {\r\n    const tag = this.createTagModel(item);\r\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\r\n  };\r\n\r\n  /**\r\n   * @name createTagModel\r\n   * @param item\r\n   */\r\n  private createTagModel(item: Ng2MenuItem): TagModel {\r\n    const display =\r\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\r\n    const value =\r\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\r\n\r\n    return {\r\n      ...item.value,\r\n      [this.tagInput.displayBy]: display,\r\n      [this.tagInput.identifyBy]: value\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param value {string}\r\n   */\r\n  private getMatchingItems(value: string): TagModel[] {\r\n    if (!value && !this.showDropdownIfEmpty) {\r\n      return [];\r\n    }\r\n\r\n    const dupesAllowed = this.tagInput.allowDupes;\r\n\r\n    return this.autocompleteItems.filter((item: TagModel) => {\r\n      const hasValue = dupesAllowed\r\n        ? false\r\n        : this.tagInput.tags.some(tag => {\r\n            const identifyBy = this.tagInput.identifyBy;\r\n            const model =\r\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\r\n\r\n            return model === item[this.identifyBy];\r\n          });\r\n\r\n      return this.matchingFn(value, item) && hasValue === false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @name setItems\r\n   */\r\n  private setItems(items: TagModel[]): void {\r\n    this.items = items.slice(0, this.limitItemsTo || items.length);\r\n  }\r\n\r\n  /**\r\n   * @name resetItems\r\n   */\r\n  private resetItems = (): void => {\r\n    this.items = [];\r\n  };\r\n\r\n  /**\r\n   * @name populateItems\r\n   * @param data\r\n   */\r\n  private populateItems(data: any): TagInputDropdown {\r\n    this.autocompleteItems = data.map(item => {\r\n      return typeof item === 'string'\r\n        ? {\r\n            [this.displayBy]: item,\r\n            [this.identifyBy]: item\r\n          }\r\n        : item;\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @name getItemsFromObservable\r\n   * @param text\r\n   */\r\n  private getItemsFromObservable = (text: string): void => {\r\n    this.setLoadingState(true);\r\n\r\n    const subscribeFn = (data: any[]) => {\r\n      // hide loading animation\r\n      this.setLoadingState(false)\r\n        // add items\r\n        .populateItems(data);\r\n\r\n      this.setItems(this.getMatchingItems(text));\r\n\r\n      if (this.items.length) {\r\n        this.dropdown.show(this.calculatePosition());\r\n      } else {\r\n        this.dropdown.hide();\r\n      }\r\n    };\r\n\r\n    this.autocompleteObservable(text)\r\n      .pipe(first())\r\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\r\n  };\r\n\r\n  /**\r\n   * @name setLoadingState\r\n   * @param state\r\n   */\r\n  private setLoadingState(state: boolean): TagInputDropdown {\r\n    this.tagInput.isLoading = state;\r\n\r\n    return this;\r\n  }\r\n}\r\n","<ng2-dropdown [dynamicUpdate]=\"dynamicUpdate\">\r\n    <ng2-dropdown-menu [focusFirstElement]=\"focusFirstElement\"\r\n                       [zIndex]=\"zIndex\"\r\n                       [appendToBody]=\"appendToBody\"\r\n                       [offset]=\"offset\">\r\n        <ng2-menu-item *ngFor=\"let item of items; let index = index; let last = last\"\r\n                       [value]=\"item\"\r\n                       [ngSwitch]=\"!!templates.length\">\r\n\r\n            <span *ngSwitchCase=\"false\"\r\n                  [innerHTML]=\"item[displayBy] | highlight : tagInput.inputForm.value.value\">\r\n            </span>\r\n\r\n            <ng-template *ngSwitchDefault\r\n                      [ngTemplateOutlet]=\"templates.first\"\r\n                      [ngTemplateOutletContext]=\"{ item: item, index: index, last: last }\">\r\n            </ng-template>\r\n        </ng2-menu-item>\r\n    </ng2-dropdown-menu>\r\n</ng2-dropdown>\r\n","// angular\r\nimport {\r\n    Component,\r\n    forwardRef,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Renderer2,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ContentChildren,\r\n    ContentChild,\r\n    OnInit,\r\n    TemplateRef,\r\n    QueryList,\r\n    AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n    AsyncValidatorFn,\r\n    UntypedFormControl,\r\n    NG_VALUE_ACCESSOR,\r\n    ValidatorFn\r\n} from '@angular/forms';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\r\n\r\n// ng2-tag-input\r\nimport { TagInputAccessor } from '../../core/accessor';\r\nimport { TagModel } from '../../core/tag-model';\r\n\r\nimport { listen } from '../../core/helpers/listen';\r\nimport * as constants from '../../core/constants';\r\n\r\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\r\n\r\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\r\nimport { TagComponent } from '../tag/tag.component';\r\n\r\nimport { animations } from './animations';\r\nimport { defaults } from '../../defaults';\r\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\r\n\r\nconst CUSTOM_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TagInputComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'tag-input',\r\n    providers: [CUSTOM_ACCESSOR],\r\n    styleUrls: ['./tag-input.style.scss'],\r\n    templateUrl: './tag-input.template.html',\r\n    animations\r\n})\r\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\r\n    /**\r\n     * @name separatorKeys\r\n     * @desc keyboard keys with which a user can separate items\r\n     */\r\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\r\n\r\n    /**\r\n     * @name separatorKeyCodes\r\n     * @desc keyboard key codes with which a user can separate items\r\n     */\r\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\r\n\r\n    /**\r\n     * @name placeholder\r\n     * @desc the placeholder of the input text\r\n     */\r\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\r\n\r\n    /**\r\n     * @name secondaryPlaceholder\r\n     * @desc placeholder to appear when the input is empty\r\n     */\r\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\r\n\r\n    /**\r\n     * @name maxItems\r\n     * @desc maximum number of items that can be added\r\n     */\r\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\r\n\r\n    /**\r\n     * @name validators\r\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\r\n\r\n    /**\r\n    * - if set to true, it will only possible to add items from the autocomplete\r\n    * @name onlyFromAutocomplete\r\n    */\r\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\r\n\r\n    /**\r\n     * @name errorMessages\r\n     */\r\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\r\n\r\n    /**\r\n     * @name theme\r\n     */\r\n    @Input() public theme: string = defaults.tagInput.theme;\r\n\r\n    /**\r\n     * @name onTextChangeDebounce\r\n     */\r\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\r\n\r\n    /**\r\n     * - custom id assigned to the input\r\n     * @name id\r\n     */\r\n    @Input() public inputId = defaults.tagInput.inputId;\r\n\r\n    /**\r\n     * - custom class assigned to the input\r\n     */\r\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\r\n\r\n    /**\r\n     * - option to clear text input when the form is blurred\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\r\n\r\n    /**\r\n     * - hideForm\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\r\n\r\n    /**\r\n     * @name addOnBlur\r\n     */\r\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\r\n\r\n    /**\r\n     * @name addOnPaste\r\n     */\r\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\r\n\r\n    /**\r\n     * - pattern used with the native method split() to separate patterns in the string pasted\r\n     * @name pasteSplitPattern\r\n     */\r\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\r\n\r\n    /**\r\n     * @name blinkIfDupe\r\n     */\r\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\r\n\r\n    /**\r\n     * @name removable\r\n     */\r\n    @Input() public removable = defaults.tagInput.removable;\r\n\r\n    /**\r\n     * @name editable\r\n     */\r\n    @Input() public editable: boolean = defaults.tagInput.editable;\r\n\r\n    /**\r\n     * @name allowDupes\r\n     */\r\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\r\n\r\n    /**\r\n     * @description if set to true, the newly added tags will be added as strings, and not objects\r\n     * @name modelAsStrings\r\n     */\r\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\r\n\r\n    /**\r\n     * @name trimTags\r\n     */\r\n    @Input() public trimTags = defaults.tagInput.trimTags;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input() public get inputText(): string {\r\n        return this.inputTextValue;\r\n    }\r\n\r\n    /**\r\n     * @name ripple\r\n     */\r\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     */\r\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\r\n\r\n    /**\r\n     * @name disable\r\n     */\r\n    @Input() public disable: boolean = defaults.tagInput.disable;\r\n\r\n    /**\r\n     * @name dragZone\r\n     */\r\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\r\n\r\n    /**\r\n     * @name onRemoving\r\n     */\r\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\r\n\r\n    /**\r\n     * @name onAdding\r\n     */\r\n    @Input() public onAdding = defaults.tagInput.onAdding;\r\n\r\n    /**\r\n     * @name animationDuration\r\n     */\r\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\r\n\r\n    /**\r\n     * @name onAdd\r\n     * @desc event emitted when adding a new item\r\n     */\r\n    @Output() public onAdd = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     * @desc event emitted when removing an existing item\r\n     */\r\n    @Output() public onRemove = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onSelect\r\n     * @desc event emitted when selecting an item\r\n     */\r\n    @Output() public onSelect = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is focused\r\n     */\r\n    @Output() public onFocus = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is blurred\r\n     */\r\n    @Output() public onBlur = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onTextChange\r\n     * @desc event emitted when the input value changes\r\n     */\r\n    @Output() public onTextChange = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when text is pasted in the form\r\n     * @name onPaste\r\n     */\r\n    @Output() public onPaste = new EventEmitter<string>();\r\n\r\n    /**\r\n     * - output triggered when tag entered is not valid\r\n     * @name onValidationError\r\n     */\r\n    @Output() public onValidationError = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when tag is edited\r\n     * @name onTagEdited\r\n     */\r\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name dropdown\r\n     */\r\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\r\n    @ContentChild(TagInputDropdown) declare public dropdown: TagInputDropdown;\r\n    /**\r\n     * @name template\r\n     * @desc reference to the template if provided by the user\r\n     */\r\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\r\n\r\n    /**\r\n     * @name inputForm\r\n     */\r\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\r\n\r\n    /**\r\n     * @name selectedTag\r\n     * @desc reference to the current selected tag\r\n     */\r\n    public selectedTag: TagModel | undefined;\r\n\r\n    /**\r\n     * @name isLoading\r\n     */\r\n    public isLoading = false;\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text\r\n     */\r\n    public set inputText(text: string) {\r\n        this.inputTextValue = text;\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    /**\r\n     * @name tags\r\n     * @desc list of Element items\r\n     */\r\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\r\n\r\n    /**\r\n     * @name listeners\r\n     * @desc array of events that get fired using @fireEvents\r\n     */\r\n    private listeners = {\r\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\r\n        [constants.KEYUP]: <{ (fun): any }[]>[]\r\n    };\r\n\r\n    /**\r\n     * @description emitter for the 2-way data binding inputText value\r\n     * @name inputTextChange\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * @description private variable to bind get/set\r\n     * @name inputTextValue\r\n     */\r\n    public inputTextValue = '';\r\n\r\n    /**\r\n     * @desc removes the tab index if it is set - it will be passed through to the input\r\n     * @name tabindexAttr\r\n     */\r\n    @HostBinding('attr.tabindex')\r\n    public get tabindexAttr(): string {\r\n        return this.tabindex !== '' ? '-1' : '';\r\n    }\r\n\r\n    /**\r\n     * @name animationMetadata\r\n     */\r\n    public animationMetadata: { value: string, params: object };\r\n\r\n    public errors: string[] = [];\r\n\r\n    public isProgressBarVisible$: Observable<boolean>;\r\n\r\n    constructor(private readonly renderer: Renderer2,\r\n        public readonly dragProvider: DragProvider) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @name ngAfterViewInit\r\n     */\r\n    public ngAfterViewInit(): void {\r\n        // set up listeners\r\n\r\n        this.setUpKeypressListeners();\r\n        this.setupSeparatorKeysListener();\r\n        this.setUpInputKeydownListeners();\r\n\r\n        if (this.onTextChange.observers.length) {\r\n            this.setUpTextChangeSubscriber();\r\n        }\r\n\r\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\r\n        if (this.clearOnBlur || this.addOnBlur) {\r\n            this.setUpOnBlurSubscriber();\r\n        }\r\n\r\n        // if addOnPaste is set to true, register the handler and add items\r\n        if (this.addOnPaste) {\r\n            this.setUpOnPasteListener();\r\n        }\r\n\r\n        const statusChanges$ = this.inputForm.form.statusChanges;\r\n\r\n        statusChanges$.pipe(\r\n            filter((status: string) => status !== 'PENDING')\r\n        ).subscribe(() => {\r\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\r\n        });\r\n\r\n        this.isProgressBarVisible$ = statusChanges$.pipe(\r\n            map((status: string) => {\r\n                return status === 'PENDING' || this.isLoading;\r\n            })\r\n        );\r\n\r\n        // if hideForm is set to true, remove the input\r\n        if (this.hideForm) {\r\n            this.inputForm.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name ngOnInit\r\n     */\r\n    public ngOnInit(): void {\r\n        // if the number of items specified in the model is > of the value of maxItems\r\n        // degrade gracefully and let the max number of items to be the number of items in the model\r\n        // though, warn the user.\r\n        const hasReachedMaxItems = this.maxItems !== undefined &&\r\n            this.items &&\r\n            this.items.length > this.maxItems;\r\n\r\n        if (hasReachedMaxItems) {\r\n            this.maxItems = this.items.length;\r\n            console.warn(constants.MAX_ITEMS_WARNING);\r\n        }\r\n\r\n        // Setting editable to false to fix problem with tags in IE still being editable when\r\n        // onlyFromAutocomplete is true\r\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\r\n\r\n        this.setAnimationMetadata();\r\n    }\r\n\r\n    /**\r\n     * @name onRemoveRequested\r\n     * @param tag\r\n     * @param index\r\n     */\r\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\r\n        return new Promise(resolve => {\r\n            const subscribeFn = (model: TagModel) => {\r\n                this.removeItem(model, index);\r\n                resolve(tag);\r\n            };\r\n\r\n            this.onRemoving ?\r\n                this.onRemoving(tag)\r\n                    .pipe(first())\r\n                    .subscribe(subscribeFn) : subscribeFn(tag);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name onAddingRequested\r\n     * @param fromAutocomplete {boolean}\r\n     * @param tag {TagModel}\r\n     * @param index? {number}\r\n     * @param giveupFocus? {boolean}\r\n     */\r\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\r\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\r\n        return new Promise((resolve, reject) => {\r\n            const subscribeFn = (model: TagModel) => {\r\n                return this\r\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\r\n                    .then(resolve)\r\n                    .catch(reject);\r\n            };\r\n\r\n            return this.onAdding ?\r\n                this.onAdding(tag)\r\n                    .pipe(first())\r\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name appendTag\r\n     * @param tag {TagModel}\r\n     */\r\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\r\n        const items = this.items;\r\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\r\n\r\n        this.items = [\r\n            ...items.slice(0, index),\r\n            model,\r\n            ...items.slice(index, items.length)\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @name createTag\r\n     * @param model\r\n     */\r\n    public createTag = (model: TagModel): TagModel => {\r\n        const trim = (val: TagModel, key: string): TagModel => {\r\n            return typeof val === 'string' ? val.trim() : val[key];\r\n        };\r\n\r\n        return {\r\n            ...typeof model !== 'string' ? model : {},\r\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\r\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @name selectItem\r\n     * @desc selects item passed as parameter as the selected tag\r\n     * @param item\r\n     * @param emit\r\n     */\r\n    public selectItem(item: TagModel | undefined, emit = true): void {\r\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\r\n\r\n        if (isReadonly || this.selectedTag === item) {\r\n            return;\r\n        }\r\n\r\n        this.selectedTag = item;\r\n\r\n        if (emit) {\r\n            this.onSelect.emit(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name fireEvents\r\n     * @desc goes through the list of the events for a given eventName, and fires each of them\r\n     * @param eventName\r\n     * @param $event\r\n     */\r\n    public fireEvents(eventName: string, $event?): void {\r\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\r\n    }\r\n\r\n    /**\r\n     * @name handleKeydown\r\n     * @desc handles action when the user hits a keyboard key\r\n     * @param data\r\n     */\r\n    public handleKeydown(data: any): void {\r\n        const event = data.event;\r\n        const key = event.keyCode || event.which;\r\n        const shiftKey = event.shiftKey || false;\r\n\r\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\r\n            case constants.ACTIONS_KEYS.DELETE:\r\n                if (this.selectedTag && this.removable) {\r\n                    const index = this.items.indexOf(this.selectedTag);\r\n                    this.onRemoveRequested(this.selectedTag, index);\r\n                }\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\r\n                this.moveToTag(data.model, constants.PREV);\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\r\n                this.moveToTag(data.model, constants.NEXT);\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.TAB:\r\n                if (shiftKey) {\r\n                    if (this.isFirstTag(data.model)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.moveToTag(data.model, constants.PREV);\r\n                } else {\r\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.moveToTag(data.model, constants.NEXT);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n        // prevent default behaviour\r\n        event.preventDefault();\r\n    }\r\n\r\n    public async onFormSubmit() {\r\n        try {\r\n            await this.onAddingRequested(false, this.formValue);\r\n        } catch {\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name setInputValue\r\n     * @param value\r\n     */\r\n    public setInputValue(value: string, emitEvent = true): void {\r\n        const control = this.getControl();\r\n\r\n        // update form value with the transformed item\r\n        control.setValue(value, { emitEvent });\r\n    }\r\n\r\n    /**\r\n     * @name getControl\r\n     */\r\n    private getControl(): UntypedFormControl {\r\n        return this.inputForm.value as UntypedFormControl;\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     * @param applyFocus\r\n     * @param displayAutocomplete\r\n     */\r\n    public focus(applyFocus = false, displayAutocomplete = false): void {\r\n        if (this.dragProvider.getState('dragging')) {\r\n            return;\r\n        }\r\n\r\n        this.selectItem(undefined, false);\r\n\r\n        if (applyFocus) {\r\n            this.inputForm.focus();\r\n            this.onFocus.emit(this.formValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.onTouched();\r\n\r\n        this.onBlur.emit(this.formValue);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     */\r\n    public hasErrors(): boolean {\r\n        return !!this.inputForm && this.inputForm.hasErrors();\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     */\r\n    public isInputFocused(): boolean {\r\n        return !!this.inputForm && this.inputForm.isInputFocused();\r\n    }\r\n\r\n    /**\r\n     * - this is the one way I found to tell if the template has been passed and it is not\r\n     * the template for the menu item\r\n     * @name hasCustomTemplate\r\n     */\r\n    public hasCustomTemplate(): boolean {\r\n        const template = this.templates ? this.templates.first : undefined;\r\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\r\n            this.dropdown.templates.first : undefined;\r\n\r\n        return Boolean(template && template !== menuTemplate);\r\n    }\r\n\r\n    /**\r\n     * @name maxItemsReached\r\n     */\r\n    public get maxItemsReached(): boolean {\r\n        return this.maxItems !== undefined &&\r\n            this.items.length >= this.maxItems;\r\n    }\r\n\r\n    /**\r\n     * @name formValue\r\n     */\r\n    public get formValue(): string {\r\n        const form = this.inputForm.value;\r\n\r\n        return form ? form.value : '';\r\n    }\r\n\r\n    /**3\r\n     * @name onDragStarted\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\r\n        event.stopPropagation();\r\n\r\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\r\n\r\n        this.dragProvider.setSender(this);\r\n        this.dragProvider.setDraggedItem(event, item);\r\n        this.dragProvider.setState({ dragging: true, index });\r\n    }\r\n\r\n    /**\r\n     * @name onDragOver\r\n     * @param event\r\n     */\r\n    public onDragOver(event: DragEvent, index?: number): void {\r\n        this.dragProvider.setState({ dropping: true });\r\n        this.dragProvider.setReceiver(this);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onTagDropped(event: DragEvent, index?: number): void {\r\n        const item = this.dragProvider.getDraggedItem(event);\r\n\r\n        if (!item || item.zone !== this.dragZone) {\r\n            return;\r\n        }\r\n\r\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @name isDropping\r\n     */\r\n    public isDropping(): boolean {\r\n        const isReceiver = this.dragProvider.receiver === this;\r\n        const isDropping = this.dragProvider.getState('dropping');\r\n\r\n        return Boolean(isReceiver && isDropping);\r\n    }\r\n\r\n    /**\r\n     * @name onTagBlurred\r\n     * @param changedElement {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public onTagBlurred(changedElement: TagModel, index: number): void {\r\n        this.items[index] = changedElement;\r\n        this.blur();\r\n    }\r\n\r\n    /**\r\n     * @name trackBy\r\n     * @param items\r\n     */\r\n    public trackBy(index: number, item: TagModel): string {\r\n        return item[this.identifyBy];\r\n    }\r\n\r\n    /**\r\n     * @name updateEditedTag\r\n     * @param tag\r\n     */\r\n    public updateEditedTag(tag: TagModel): void {\r\n        this.onTagEdited.emit(tag);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\r\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\r\n        const value = this.getItemDisplay(tag).trim();\r\n\r\n        if (selectedItem && !fromAutocomplete || !value) {\r\n            return false;\r\n        }\r\n\r\n        const dupe = this.findDupe(tag, fromAutocomplete);\r\n\r\n        // if so, give a visual cue and return false\r\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\r\n            const model = this.tags.find(item => {\r\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\r\n            });\r\n\r\n            if (model) {\r\n                model.blink();\r\n            }\r\n        }\r\n\r\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\r\n\r\n        const assertions = [\r\n            // 1. there must be no dupe OR dupes are allowed\r\n            !dupe || this.allowDupes,\r\n\r\n            // 2. check max items has not been reached\r\n            !this.maxItemsReached,\r\n\r\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\r\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\r\n        ];\r\n\r\n        return assertions.filter(Boolean).length === assertions.length;\r\n    }\r\n\r\n    /**\r\n     * @name moveToTag\r\n     * @param item\r\n     * @param direction\r\n     */\r\n    private moveToTag(item: TagModel, direction: string): void {\r\n        const isLast = this.isLastTag(item);\r\n        const isFirst = this.isFirstTag(item);\r\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\r\n            (direction === constants.PREV && isFirst);\r\n\r\n        if (stopSwitch) {\r\n            this.focus(true);\r\n            return;\r\n        }\r\n\r\n        const offset = direction === constants.NEXT ? 1 : -1;\r\n        const index = this.getTagIndex(item) + offset;\r\n        const tag = this.getTagAtIndex(index);\r\n\r\n        return tag.select.call(tag);\r\n    }\r\n\r\n    /**\r\n     * @name isFirstTag\r\n     * @param item {TagModel}\r\n     */\r\n    private isFirstTag(item: TagModel): boolean {\r\n        return this.tags.first.model === item;\r\n    }\r\n\r\n    /**\r\n     * @name isLastTag\r\n     * @param item {TagModel}\r\n     */\r\n    private isLastTag(item: TagModel): boolean {\r\n        return this.tags.last.model === item;\r\n    }\r\n\r\n    /**\r\n     * @name getTagIndex\r\n     * @param item\r\n     */\r\n    private getTagIndex(item: TagModel): number {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags.findIndex(tag => tag.model === item);\r\n    }\r\n\r\n    /**\r\n     * @name getTagAtIndex\r\n     * @param index\r\n     */\r\n    private getTagAtIndex(index: number) {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags[index];\r\n    }\r\n\r\n    /**\r\n     * @name removeItem\r\n     * @desc removes an item from the array of the model\r\n     * @param tag {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public removeItem(tag: TagModel, index: number): void {\r\n        this.items = this.getItemsWithout(index);\r\n\r\n        // if the removed tag was selected, set it as undefined\r\n        if (this.selectedTag === tag) {\r\n            this.selectItem(undefined, false);\r\n        }\r\n\r\n        // focus input\r\n        this.focus(true, false);\r\n\r\n        // emit remove event\r\n        this.onRemove.emit(tag);\r\n    }\r\n\r\n    /**\r\n     * @name addItem\r\n     * @desc adds the current text model to the items array\r\n     * @param fromAutocomplete {boolean}\r\n     * @param item {TagModel}\r\n     * @param index? {number}\r\n     * @param giveupFocus? {boolean}\r\n     */\r\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\r\n        Promise<TagModel> {\r\n        const display = this.getItemDisplay(item);\r\n        const tag = this.createTag(item);\r\n\r\n        if (fromAutocomplete) {\r\n            this.setInputValue(this.getItemValue(item, true));\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * @name reset\r\n             */\r\n            const reset = (): void => {\r\n                // reset control and focus input\r\n                this.setInputValue('');\r\n\r\n                if (giveupFocus) {\r\n                    this.focus(false, false);\r\n                } else {\r\n                    // focus input\r\n                    this.focus(true, false);\r\n                }\r\n\r\n                resolve(display);\r\n            };\r\n\r\n            const appendItem = (): void => {\r\n                this.appendTag(tag, index);\r\n\r\n                // emit event\r\n                this.onAdd.emit(tag);\r\n\r\n                if (!this.dropdown) {\r\n                    return;\r\n                }\r\n\r\n                this.dropdown.hide();\r\n\r\n                if (this.dropdown.showDropdownIfEmpty) {\r\n                    this.dropdown.show();\r\n                }\r\n            };\r\n\r\n            const status = this.inputForm.form.status;\r\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\r\n\r\n            const onValidationError = () => {\r\n                this.onValidationError.emit(tag);\r\n                return reject();\r\n            };\r\n\r\n            if (status === 'VALID' && isTagValid) {\r\n                appendItem();\r\n                return reset();\r\n            }\r\n\r\n            if (status === 'INVALID' || !isTagValid) {\r\n                reset();\r\n                return onValidationError();\r\n            }\r\n\r\n            if (status === 'PENDING') {\r\n                const statusUpdate$ = this.inputForm.form.statusChanges;\r\n\r\n                return statusUpdate$\r\n                    .pipe(\r\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\r\n                        first()\r\n                    )\r\n                    .subscribe((statusUpdate) => {\r\n                        if (statusUpdate === 'VALID' && isTagValid) {\r\n                            appendItem();\r\n                            return reset();\r\n                        } else {\r\n                            reset();\r\n                            return onValidationError();\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setupSeparatorKeysListener\r\n     */\r\n    private setupSeparatorKeysListener(): void {\r\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\r\n        const listener = ($event) => {\r\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\r\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\r\n            // the keyCode of keydown event is 229 when IME is processing the key event.\r\n            const isIMEProcessing = $event.keyCode === 229;\r\n\r\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\r\n                $event.preventDefault();\r\n                this.onAddingRequested(false, this.formValue)\r\n                    .catch(() => { });\r\n            }\r\n        };\r\n\r\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeypressListeners\r\n     */\r\n    private setUpKeypressListeners(): void {\r\n        const listener = ($event) => {\r\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\r\n\r\n            if (isCorrectKey &&\r\n                !this.formValue &&\r\n                this.items.length) {\r\n                this.tags.last.select.call(this.tags.last);\r\n            }\r\n        };\r\n\r\n        // setting up the keypress listeners\r\n        listen.call(this, constants.KEYDOWN, listener);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeydownListeners\r\n     */\r\n    private setUpInputKeydownListeners(): void {\r\n        this.inputForm.onKeydown.subscribe(event => {\r\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnPasteListener\r\n     */\r\n    private setUpOnPasteListener() {\r\n        const input = this.inputForm.input.nativeElement;\r\n\r\n        // attach listener to input\r\n        this.renderer.listen(input, 'paste', (event) => {\r\n            this.onPasteCallback(event);\r\n\r\n            event.preventDefault();\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpTextChangeSubscriber\r\n     */\r\n    private setUpTextChangeSubscriber(): void {\r\n        this.inputForm.form\r\n            .valueChanges\r\n            .pipe(\r\n                debounceTime(this.onTextChangeDebounce)\r\n            )\r\n            .subscribe((value: { item: string }) => {\r\n                this.onTextChange.emit(value.item);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnBlurSubscriber\r\n     */\r\n    private setUpOnBlurSubscriber(): void {\r\n        const filterFn = (): boolean => {\r\n            const isVisible = this.dropdown && this.dropdown.isVisible;\r\n            return !isVisible && !!this.formValue;\r\n        };\r\n\r\n        this.inputForm\r\n            .onBlur\r\n            .pipe(\r\n                debounceTime(100),\r\n                filter(filterFn)\r\n            )\r\n            .subscribe(() => {\r\n                const reset = () => this.setInputValue('');\r\n\r\n                if (this.addOnBlur) {\r\n                    return this\r\n                        .onAddingRequested(false, this.formValue, undefined, true)\r\n                        .then(reset)\r\n                        .catch(reset);\r\n                }\r\n\r\n                reset();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name findDupe\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\r\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\r\n        const id = tag[identifyBy];\r\n\r\n        return this.items.find(item => this.getItemValue(item) === id);\r\n    }\r\n\r\n    /**\r\n     * @name onPasteCallback\r\n     * @param data\r\n     */\r\n    private onPasteCallback = async (data: ClipboardEvent) => {\r\n        interface IEWindow extends Window {\r\n            clipboardData: DataTransfer;\r\n        }\r\n\r\n        const getText = (): string => {\r\n            const isIE = Boolean((window as IEWindow & typeof globalThis).clipboardData);\r\n            const clipboardData = isIE ? (\r\n                (window as IEWindow & typeof globalThis).clipboardData\r\n            ) : data.clipboardData;\r\n            const type = isIE ? 'Text' : 'text/plain';\r\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\r\n        };\r\n\r\n        const text = getText();\r\n\r\n        const requests = text\r\n            .split(this.pasteSplitPattern)\r\n            .map(item => {\r\n                const tag = this.createTag(item);\r\n                this.setInputValue(tag[this.displayBy]);\r\n                return this.onAddingRequested(false, tag);\r\n            });\r\n\r\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\r\n\r\n        Promise.all(requests).then(() => {\r\n            this.onPaste.emit(text);\r\n            resetInput();\r\n        })\r\n            .catch(resetInput);\r\n    }\r\n\r\n    /**\r\n     * @name setAnimationMetadata\r\n     */\r\n    private setAnimationMetadata(): void {\r\n        this.animationMetadata = {\r\n            value: 'in',\r\n            params: { ...this.animationDuration }\r\n        };\r\n    }\r\n}\r\n","<div\r\n    [ngClass]=\"theme\"\r\n    class=\"ng2-tag-input\"\r\n    (click)=\"focus(true, false)\"\r\n    [attr.tabindex]=\"-1\"\r\n    (drop)=\"dragZone ? onTagDropped($event, undefined) : undefined\"\r\n    (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\r\n    (dragover)=\"dragZone ? onDragOver($event) : undefined\"\r\n    (dragend)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\r\n    [class.ng2-tag-input--dropping]=\"isDropping()\"\r\n    [class.ng2-tag-input--disabled]=\"disable\"\r\n    [class.ng2-tag-input--loading]=\"isLoading\"\r\n    [class.ng2-tag-input--invalid]=\"hasErrors()\"\r\n    [class.ng2-tag-input--focused]=\"isInputFocused()\"\r\n>\r\n\r\n    <!-- TAGS -->\r\n    <div class=\"ng2-tags-container\">\r\n        <tag\r\n            *ngFor=\"let item of items; let i = index; trackBy: trackBy\"\r\n            (onSelect)=\"selectItem(item)\"\r\n            (onRemove)=\"onRemoveRequested(item, i)\"\r\n            (onKeyDown)=\"handleKeydown($event)\"\r\n            (onTagEdited)=\"updateEditedTag($event)\"\r\n            (onBlur)=\"onTagBlurred($event, i)\"\r\n            draggable=\"{{ editable }}\"\r\n            (dragstart)=\"dragZone ? onDragStarted($event, item, i) : undefined\"\r\n            (drop)=\"dragZone ? onTagDropped($event, i) : undefined\"\r\n            (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\r\n            (dragover)=\"dragZone ? onDragOver($event, i) : undefined\"\r\n            (dragleave)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\r\n            [canAddTag]=\"isTagValid\"\r\n            [attr.tabindex]=\"0\"\r\n            [disabled]=\"disable\"\r\n            [@animation]=\"animationMetadata\"\r\n            [hasRipple]=\"ripple\"\r\n            [index]=\"i\"\r\n            [removable]=\"removable\"\r\n            [editable]=\"editable\"\r\n            [displayBy]=\"displayBy\"\r\n            [identifyBy]=\"identifyBy\"\r\n            [template]=\"!!hasCustomTemplate() ? templates.first : undefined\"\r\n            [draggable]=\"dragZone\"\r\n            [model]=\"item\"\r\n        >\r\n        </tag>\r\n\r\n        <tag-input-form\r\n            (onSubmit)=\"onFormSubmit()\"\r\n            (onBlur)=\"blur()\"\r\n            (click)=\"dropdown ? dropdown.show() : undefined\"\r\n            (onKeydown)=\"fireEvents('keydown', $event)\"\r\n            (onKeyup)=\"fireEvents('keyup', $event)\"\r\n            [inputText]=\"inputText\"\r\n            [disabled]=\"disable\"\r\n            [validators]=\"validators\"\r\n            [asyncValidators]=\"asyncValidators\"\r\n            [hidden]=\"maxItemsReached\"\r\n            [placeholder]=\"items.length ? placeholder : secondaryPlaceholder\"\r\n            [inputClass]=\"inputClass\"\r\n            [inputId]=\"inputId\"\r\n            [tabindex]=\"tabindex\"\r\n        >\r\n        </tag-input-form>\r\n    </div>\r\n\r\n    <div\r\n        class=\"progress-bar\"\r\n        *ngIf=\"isProgressBarVisible$ | async\"\r\n    ></div>\r\n</div>\r\n\r\n<!-- ERRORS -->\r\n<div\r\n    *ngIf=\"hasErrors()\"\r\n    [ngClass]=\"theme\"\r\n    class=\"error-messages\"\r\n>\r\n    <p\r\n        *ngFor=\"let error of errors\"\r\n        class=\"error-message\"\r\n    >\r\n        <span>{{ error }}</span>\r\n    </p>\r\n</div>\r\n<ng-content></ng-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\r\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\r\nimport { DragProvider } from './core/providers/drag-provider';\r\nimport { OptionsProvider, Options } from './core/providers/options-provider';\r\nimport { TagInputComponent } from './components/tag-input/tag-input';\r\nimport { DeleteIconComponent } from './components/icon/icon';\r\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\r\nimport { TagComponent } from './components/tag/tag.component';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagRipple } from './components/tag/tag-ripple.component';\r\n\r\nconst optionsProvider = new OptionsProvider();\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        Ng2DropdownModule\r\n    ],\r\n    declarations: [\r\n        TagInputComponent,\r\n        DeleteIconComponent,\r\n        TagInputForm,\r\n        TagComponent,\r\n        HighlightPipe,\r\n        TagInputDropdown,\r\n        TagRipple\r\n    ],\r\n    exports: [\r\n        TagInputComponent,\r\n        DeleteIconComponent,\r\n        TagInputForm,\r\n        TagComponent,\r\n        HighlightPipe,\r\n        TagInputDropdown,\r\n        TagRipple\r\n    ],\r\n    providers: [\r\n        DragProvider,\r\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\r\n    ]\r\n})\r\nexport class TagInputModule {\r\n    /**\r\n     * @name withDefaults\r\n     * @param options {Options}\r\n     */\r\n    public static withDefaults(options: Options): void {\r\n        optionsProvider.setOptions(options);\r\n    }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2.DeleteIconComponent","i3.TagRipple","i2","i3.HighlightPipe","constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT","i1.DragProvider"],"mappings":"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"}